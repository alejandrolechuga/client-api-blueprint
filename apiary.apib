FORMAT: 1A

# Veo Core API
The Veo Core API powers the CMS, Website, and Device integrations within the Veo Architecture

Please be sure to validate your response examples with [JSONLint][1].

[1]:  http://jsonlint.com/

# Group System - Navigation
Represents actions against CMS Navigation objects

## Navigation [/system/navigation]
Returns the Navigation of the CMS.

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 1,
                "type": "Navigation",
                "title": "Entities",
                "items": [
                  {
                    "id": 10,
                    "type": "Navigation",
                    "title": "Asset",
                    "link": "/browse/asset"
                  },
                  {
                    "id": 11,
                    "type": "Navigation",
                    "title": "Picture",
                    "link": "/browse/picture"
                  }
                ]
            },
            {
                "id": 2,
                "type": "Navigation",
                "title": "Taxonomies",
                "items": [
                  {
                    "id": 20,
                    "type": "Navigation",
                    "title": "Genre",
                    "link": "/browse/genre"
                  },
                  {
                    "id": 21,
                    "type": "Navigation",
                    "title": "Rating",
                    "link": "/browse/rating"
                  }
                ]
            }
        ]
    }
    ```

### Retrieve the Navigation menu [GET]
Retrieves navigation menu for the CMS. This is simply an enumeration of the Entities in the system

+ Response 200

    [Navigation][]



# Group System - Users
Represents actions against CMS User objects

## User [/system/user/{id}]
Represents a user

+ Parameters
    + id (string, `1`) ... The id of the User.

+ Model (application/json)

    ```js
    {
        "data": {
            "id": 1,
            "type": "User",
            "firstName": "John",
            "lastName": "Doe",
            "username": "johndoe@mymail.com",
            "role": "admin"
        }
    }
    ```

### Retrieves a User [GET]
Returns a specific User.

+ Response 200

    [User][]

### Updates a User [PUT]
Updates a specific User.

+ Request

    [User][]

+ Response 200

    [User][]


### Deletes a User [DELETE]
Deletes a specific User.

+ Response 204

## List Users [/system/users]
Returns all Users.

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 1,
                "type": "User",
                "firstName": "John",
                "lastName": "Doe",
                "username": "johndoe@mymail.com",
                "role": "admin"
            },
            {
                "id": 2,
                "type": "User",
                "firstName": "Jane",
                "lastName": "Doe",
                "username": "janedoe@mymail.com",
                "role": "basic"
            },

        ]
    }
    ```

### Retrieve all Users [GET]
Retrieves all users.

+ Response 200

    [List Users][]

### Creates a User [POST]
Creates a new User in the CMS.

+ Request

    [User][]

+ Response 201

    [User][]


# Group Business - Distributors
Represents actions against Distributor objects

## Distributor [/distributor/{id}]
Represents a distributor

+ Parameters
    + id (string, `1`) ... The id of the Distributor.

+ Model (application/json)

    ```js
    {
        "data": {
            "id": 1,
            "type": "Distributor",
            "status": "published",
            "name": "televisa.networks.mx",
            "code": "televisa.networks.mx",
            "contact": "Juan Perez"
        },
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve a Distributor [GET]
Returns a specific Distributor.

+ Response 200

    [Distributor][]

## List Distributors [/distributor/list]
Returns all Distributors.

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 1,
                "type": "Distributor",
                "status": "published",
                "name": "televisa.networks.mx",
                "code": "televisa.networks.mx",
                "contact": "Juan Perez"
            },
            {
                "id": 2,
                "type": "Distributor",
                "status": "published",
                "name": "televisa.networks.mx",
                "code": "televisa.networks.mx",
                "contact": "Pedro Perez"
            }
        ],
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve all Distributors [GET]
Retrieves all distributors.

+ Response 200

    [List Distributors][]

# Group Business - Studio
Represents actions against Studio objects

## Studio [/studio/{id}]
Represents a studio

+ Parameters
    + id (string, `1`) ... The id of the Studio.

+ Model (application/json)

    ```js
    {
        "data": {
            "id": 1,
            "type": "Studio",
            "status": "published",
            "name": "FOX",
            "code": "FOX"
        },
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve a Studio [GET]
Returns a specific Studio.

+ Response 200

    [Studio][]

## List Studios [/studio/list]
Returns all Studios.

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 1,
                "type": "Studio",
                "status": "published",
                "name": "FOX",
                "code": "FOX"
            },
            {
                "id": 2,
                "type": "Studio",
                "status": "published",
                "name": "SONY",
                "code": "SON"
            }
        ],
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve all Studios [GET]
Retrieves all Studios.

+ Response 200

    [List Studios][]

# Group Business - Country
Represents actions against Country object

## Country [/country/{id}]
Represents a country

+ Parameters
    + id (string, `1`) ... The id of the Country.

+ Model (application/json)

        {
            "data": {
                "id": 1,
                "parentId": 0,
                "title": "United States",
                "type": "Country"
            },
            "messages": [
                {
                    "success": "Data successfully retrieved"
                }
            ]
        }
    ```

### Retrieve a Country [GET]
Returns a specific Country.

+ Response 200

    [Country][]

## List Countries [/country/list]
A List of all countries.

+ Model (application/json)

        {
            "data": [
                {
                    "id": 1,
                    "parentId": 0,
                    "title": "United States",
                    "type": "Country"
                },
                {
                    "id": 2,
                    "parentId": 0,
                    "title": "MÃ©xico",
                    "type": "Country"
                }
            ],
            "messages": [
                {
                    "success": "Data successfully retrieved"
                }
            ]
        }
    ```

### Retrieve all Countries [GET]
Retrieves all Countries.

+ Response 200

    [List Countries][]

# Group Business - Genre
Represents actions against Genre object

## Genre [/genre/{id}]
Represents a genre

+ Parameters
    + id (string, `1`) ... The id of the Genre.

+ Model (application/json)

    ```js
        {
            "data": {
                "id": 3,
                "parentId": 0,
                "title": "Action",
                "type": "Genre"
            },
            "messages": [
                {
                    "success": "Data successfully retrieved"
                }
            ]
        }
    ```

### Retrieve a Genres [GET]
Returns a specific Genres.

+ Response 200

    [Genre][]

## List Genres [/genre/list]
Retrieve a List of all published Genres.

+ Model (application/json)

    ```js
        {
            "data": [
                {
                    "id": 3,
                    "parentId": 0,
                    "title": "Action",
                    "type": "Genre"
                },
                {
                    "id": 4,
                    "parentId": 0,
                    "title": "Spanish",
                    "type": "Genre"
                }
            ],
            "messages": [
                {
                    "success": "Data successfully retrieved"
                }
            ]
        }
    ```

### Retrieve all Genres [GET]
Retrieves all Genres.

+ Response 200

    [List Genres][]

# Group Business - Geoblocking
Represents actions against Geoblocking object

## Geoblocking [/geoblocking/{id}]
Represents a Geoblocking

+ Parameters
    + id (string, `1`) ... The id of the Geoblocking.

+ Model (application/json)

    ```js
        {
            "data": {
                "id": 1,
                "title": "Guatemala",
                "type": "Geoblocking"
            },
            "messages": [
                {
                    "success": "Data successfully retrieved"
                }
            ]
        }
    ```

### Retrieve a Geoblocking [GET]
Returns a specific Geoblocking.

+ Response 200

    [Geoblocking][]

## List Geoblocking [/geoblocking/list]
Retrieve a List of all published Geoblocking.

+ Model (application/json)

    ```js
        {
            "data": [
                {
                    "id": 1,
                    "title": "Guatemala",
                    "type": "Geoblocking"
                },
                {
                    "id": 2,
                    "title": "Italy",
                    "type": "Geoblocking"
                }
            ],
            "messages": [
                {
                    "success": "Data successfully retrieved"
                }
            ]
        }
    ```

### Retrieve all Geoblocking [GET]
Retrieves all Geoblocking.

+ Response 200

    [List Geoblocking][]

# Group Business - Parental Rating
Represents actions against Parental Rating object

## Parental Rating [/parentalrating/{id}]
Represents a Parental Rating

+ Parameters
    + id (string, `1`) ... The id of the Parental Rating.

+ Model (application/json)

    ```js
        {
            "data": {
              "id": 1,
              "title": "G",
              "code": 0,
              "type": "ParentalRating"
            },
            "messages": [
                {
                    "success": "Data successfully retrieved"
                }
            ]
        }
    ```

### Retrieve a Parental Rating [GET]
Returns a specific Parental Rating.

+ Response 200

    [Parental Rating][]

## List Parental Rating [/parentalrating/list]
Retrieve a List of all published ParentalRating.

+ Model (application/json)

    ```js
        {
            "data": [
                {
                    "id": 1,
                    "title": "G",
                    "code": "G",
                    "level": 0,
                    "type": "ParentalRating"
                },
                {
                  "id": 2,
                  "title": "PG",
                  "code": "PG",
                  "level": 1,
                  "type": "ParentalRating"
                }
            ],
            "messages": [
                {
                    "success": "Data successfully retrieved"
                }
            ]
        }
    ```

### Retrieve all Parental Rating [GET]
Retrieves all Parental Rating.

+ Response 200

    [List Parental Rating][]

# Group Business - Person
Represents actions against Person objects

## Person [/person/{id}]
Represents a Person

+ Parameters
    + id (string, `14`) ... The id of the Person.

+ Model (application/json)

    ```js
    {
        "data": {
            "id": 14,
            "type": "Person",
            "status": "published",
            "communicationName": "Helena Bonham Carter",
            "firstName": "Helena Bonham",
            "familyName": "Carter",
            "characterName": "Elpidio Valdez",
            "characterImage": {
                "id": 1,
                "alt": "Test alt value",
                "contentType": "image/png",
                "height": 126,
                "width": 224,
                "size": 30827,
                "url": "https://scablevision-a.akamaihd.net/prod/Picture/C_1_Picture_6046_profile152Image.png"
            },
            "role": "Actor",
            "asset": 3
        },
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve a Person [GET]
Returns a specific Person.

+ Response 200

    [Person][]

## List People [/people]
Returns all People.

+ Model (application/json)

    ```js
    {
        "data": [
            {
                "id": 14,
                "type": "Person",
                "status": "published",
                "communicationName": "Helena Bonham Carter",
                "firstName": "Helena Bonham",
                "familyName": "Carter",
                "characterName": "Elpidio Valdez",
                "characterImage": {
                    "id": 1,
                    "alt": "Test alt value",
                    "contentType": "image/png",
                    "height": 126,
                    "width": 224,
                    "size": 30827,
                    "url": "https://scablevision-a.akamaihd.net/prod/Picture/C_1_Picture_6046_profile152Image.png"
                },
                "role": "Actor",
                "asset": 3
            },
            {
                "id": 15,
                "type": "Person",
                "status": "published",
                "communicationName": "Edward Norton",
                "firstName": "Edward",
                "familyName": "Norton",
                "characterName": "Eutelia",
                "characterImage": null,
                "role": "Actor",
                "asset": 3
            }
        ],
        "messages": [
            {
                "success": "Data successfully retrieved"
            }
        ]
    }
    ```

### Retrieve all People [GET]
Retrieves all People.

+ Response 200

    [List People][]
